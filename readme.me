
````markdown
# üìö Biblioteca de Livros

**`biblioteca_livros`** √© uma biblioteca Python simples para gerenciar e organizar livros. Com ela, voc√™ pode adicionar, remover, listar, e buscar livros de forma f√°cil e r√°pida. Ideal para quem deseja gerenciar uma cole√ß√£o digital de livros de maneira pr√°tica!

---

## üöÄ Instala√ß√£o

Para instalar a biblioteca, basta usar o `pip`:

```bash
pip install biblioteca-livros
````

Ou, se preferir, voc√™ pode clonar o reposit√≥rio e instalar manualmente:

```bash
git clone https://github.com/usuario/biblioteca-livros.git
cd biblioteca-livros
pip install .
```


---

## üõ†Ô∏è Funcionalidades

### 1Ô∏è‚É£ **Adicionar Livro**

Adicione um novo livro √† sua cole√ß√£o.

#### `biblioteca_livros.adicionar_livro(titulo, autor, ano, genero)`

**Exemplo de uso:**

```python
from biblioteca_livros import adicionar_livro

adicionar_livro("O Senhor dos An√©is", "J.R.R. Tolkien", 1954, "Fantasia")
```

---

### 2Ô∏è‚É£ **Remover Livro**

Remova um livro da cole√ß√£o usando o t√≠tulo.

#### `biblioteca_livros.remover_livro(titulo)`

**Exemplo de uso:**

```python
from biblioteca_livros import remover_livro

remover_livro("O Senhor dos An√©is")
```

---

### 3Ô∏è‚É£ **Listar Livros**

Liste todos os livros armazenados na biblioteca.

#### `biblioteca_livros.listar_livros()`

**Exemplo de uso:**

```python
from biblioteca_livros import listar_livros

livros = listar_livros()
for livro in livros:
    print(f"{livro['titulo']} - {livro['autor']} ({livro['ano']})")
```

---

### 4Ô∏è‚É£ **Buscar Livro por T√≠tulo**

Busque um livro espec√≠fico pelo t√≠tulo.

#### `biblioteca_livros.buscar_livro_por_titulo(titulo)`

**Exemplo de uso:**

```python
from biblioteca_livros import buscar_livro_por_titulo

livro = buscar_livro_por_titulo("O Senhor dos An√©is")
print(livro)
# Sa√≠da: {'titulo': 'O Senhor dos An√©is', 'autor': 'J.R.R. Tolkien', 'ano': 1954, 'genero': 'Fantasia'}
```

---

### 5Ô∏è‚É£ **Buscar Livros por Autor**

Encontre todos os livros de um autor espec√≠fico.

#### `biblioteca_livros.buscar_livros_por_autor(autor)`

**Exemplo de uso:**

```python
from biblioteca_livros import buscar_livros_por_autor

livros_tolkien = buscar_livros_por_autor("J.R.R. Tolkien")
for livro in livros_tolkien:
    print(f"{livro['titulo']} ({livro['ano']})")
```

---

## üìä Estrutura de Dados

Os livros s√£o armazenados em um dicion√°rio com as seguintes chaves:

* **`titulo`** (str): O t√≠tulo do livro.
* **`autor`** (str): O autor do livro.
* **`ano`** (int): O ano de publica√ß√£o.
* **`genero`** (str): O g√™nero liter√°rio.

**Exemplo de livro armazenado:**

```python
{
    "titulo": "O Senhor dos An√©is",
    "autor": "J.R.R. Tolkien",
    "ano": 1954,
    "genero": "Fantasia"
}
```

---

## üí° Contribuindo

1. Fa√ßa um fork do reposit√≥rio.
2. Crie uma nova branch: `git checkout -b feature/nova-funcionalidade`.
3. Realize as altera√ß√µes desejadas.
4. Envie um pull request: `git push origin feature/nova-funcionalidade`.

*Dica:* N√£o se esque√ßa de escrever testes para garantir que tudo esteja funcionando corretamente!

---

## üß™ Testes

Para rodar os testes, voc√™ pode usar o `pytest`:

```bash
pytest
```

---